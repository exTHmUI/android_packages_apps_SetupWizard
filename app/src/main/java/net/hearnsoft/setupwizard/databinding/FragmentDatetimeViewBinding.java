// Generated by view binder compiler. Do not edit!
package net.hearnsoft.setupwizard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextClock;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.hearnsoft.setupwizard.R;

public final class FragmentDatetimeViewBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Switch autoTimeSwitch;

  @NonNull
  public final TextView date;

  @NonNull
  public final Switch formatSwitch;

  @NonNull
  public final Spinner spinner;

  @NonNull
  public final TextClock time;

  private FragmentDatetimeViewBinding(@NonNull FrameLayout rootView, @NonNull Switch autoTimeSwitch,
      @NonNull TextView date, @NonNull Switch formatSwitch, @NonNull Spinner spinner,
      @NonNull TextClock time) {
    this.rootView = rootView;
    this.autoTimeSwitch = autoTimeSwitch;
    this.date = date;
    this.formatSwitch = formatSwitch;
    this.spinner = spinner;
    this.time = time;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDatetimeViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDatetimeViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_datetime_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDatetimeViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoTimeSwitch;
      Switch autoTimeSwitch = ViewBindings.findChildViewById(rootView, id);
      if (autoTimeSwitch == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.formatSwitch;
      Switch formatSwitch = ViewBindings.findChildViewById(rootView, id);
      if (formatSwitch == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      id = R.id.time;
      TextClock time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new FragmentDatetimeViewBinding((FrameLayout) rootView, autoTimeSwitch, date,
          formatSwitch, spinner, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

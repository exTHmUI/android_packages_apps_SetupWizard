// Generated by view binder compiler. Do not edit!
package net.hearnsoft.setupwizard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.hearnsoft.setupwizard.R;

public final class FragmentSimSubViewBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout defaultCall;

  @NonNull
  public final TextView defaultCallSummary;

  @NonNull
  public final LinearLayout defaultCellureData;

  @NonNull
  public final TextView defaultDataSummary;

  @NonNull
  public final LinearLayout defaultSms;

  @NonNull
  public final TextView defaultSmsSummary;

  private FragmentSimSubViewBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout defaultCall, @NonNull TextView defaultCallSummary,
      @NonNull LinearLayout defaultCellureData, @NonNull TextView defaultDataSummary,
      @NonNull LinearLayout defaultSms, @NonNull TextView defaultSmsSummary) {
    this.rootView = rootView;
    this.defaultCall = defaultCall;
    this.defaultCallSummary = defaultCallSummary;
    this.defaultCellureData = defaultCellureData;
    this.defaultDataSummary = defaultDataSummary;
    this.defaultSms = defaultSms;
    this.defaultSmsSummary = defaultSmsSummary;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSimSubViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSimSubViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sim_sub_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSimSubViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.default_call;
      LinearLayout defaultCall = ViewBindings.findChildViewById(rootView, id);
      if (defaultCall == null) {
        break missingId;
      }

      id = R.id.default_call_summary;
      TextView defaultCallSummary = ViewBindings.findChildViewById(rootView, id);
      if (defaultCallSummary == null) {
        break missingId;
      }

      id = R.id.default_cellure_data;
      LinearLayout defaultCellureData = ViewBindings.findChildViewById(rootView, id);
      if (defaultCellureData == null) {
        break missingId;
      }

      id = R.id.default_data_summary;
      TextView defaultDataSummary = ViewBindings.findChildViewById(rootView, id);
      if (defaultDataSummary == null) {
        break missingId;
      }

      id = R.id.default_sms;
      LinearLayout defaultSms = ViewBindings.findChildViewById(rootView, id);
      if (defaultSms == null) {
        break missingId;
      }

      id = R.id.default_sms_summary;
      TextView defaultSmsSummary = ViewBindings.findChildViewById(rootView, id);
      if (defaultSmsSummary == null) {
        break missingId;
      }

      return new FragmentSimSubViewBinding((FrameLayout) rootView, defaultCall, defaultCallSummary,
          defaultCellureData, defaultDataSummary, defaultSms, defaultSmsSummary);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
